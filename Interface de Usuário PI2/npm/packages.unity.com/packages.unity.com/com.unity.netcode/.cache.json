{
  "_id": "com.unity.netcode",
  "name": "com.unity.netcode",
  "description": "Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foundation for creating networked multiplayer applications within DOTS.",
  "provider": "upm",
  "category": "",
  "dist-tags": {
    "latest": "1.2.0-pre.6"
  },
  "versions": {
    "1.2.0-pre.6": {
      "unity": "2022.3",
      "unityRelease": "11f1",
      "_upm": {
        "changelog": "### Changed\n\n* Promotion preparation"
      },
      "upmCi": {
        "footprint": "3a1e6b9bc4307b7c333cd180de21b9f13b936e1b"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.netcode@1.2/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/dots.git",
        "type": "git",
        "revision": "c2136868e2bfbe78d7c68475d8ced6c623b4cb6d"
      },
      "dist": {
        "shasum": "a849a8a54b9fce0daa5681aaa3221849feeab382",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-1.2.0-pre.6.tgz"
      },
      "name": "com.unity.netcode",
      "version": "1.2.0-pre.6",
      "description": "Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foundation for creating networked multiplayer applications within DOTS.",
      "displayName": "Netcode for Entities",
      "type": "assets",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.transport": "2.1.0",
        "com.unity.entities": "1.2.0-pre.6",
        "com.unity.modules.animation": "1.0.0"
      }
    },
    "1.2.0-pre.4": {
      "unity": "2022.3",
      "unityRelease": "11f1",
      "_upm": {
        "changelog": "### Added\n\n* You can now disable the automatic Entities `ICustomBootstrap` bootstrapping (which calls NetCode's own `ClientServerBootstrap`) by either; a) disabling it in the ProjectSettings (default value is enabled), or b) adding the new `OverrideAutomaticNetcodeBootstrap` MonoBehaviour to your first build scene (i.e. your Active scene). Thus, there is no longer any need to write a custom bootstrap just to support a Frontend scene vs a Gameplay scene.\n* A `NetCodeConfig` ScriptableObject, containing most NetCode configuration variables, allowing customization without needing to modify code. Most variables are live-tweakable.\n* A 'Snapshot Sequence Id' (SSId), which is used to accurately measure packet loss. It adds 1 byte of header to each snapshot, but enables us to measure Netcode-caused causes of PL (i.e. out of order snapshots being discarded, and discarding a snapshot if another arrives on the same frame). Access statistics via a new struct on the client's `NetworkSnapshotAck`.\n* `RpcCollection.GetRpcHeaderLength` and `NetworkStreamDriver.GetMaximumHeaderSize` to allow users to determine max safe payload sizes.\n\n### Fixed\n\n* Esoteric exception in `MultiplayerPlaymodeWindow` in server-only cases.\n* Interpolated ghosts now support `IInputComponentData` and `AutoCommandTarget`.\n* Improved `UpdateGhostOwnerIsLocal` to make it reactive to `GhostOwner` changes, thus it no longer needs to poll.\n* NetDbg `ArgumentException` when a predicted ghost contains a replicated enableable flag component.\n* Display-only issue where the variants for additional entities (created via baking) were calculated as if they were 'root' entities. They are - in fact - child entities, thus the variants automatically selected for them should default to child defaults.\n* QoL issue; we now allow users to opt-out of auto-baking `GhostAuthoringInspectionComponent`s when selecting their GameObject, reducing stalls when clicking around the Hierarchy or Project.\n* QoL issue where `GhostAuthoringInspectionComponent` was not always modifiable in areas of the Editor where it is valid to modify them.\n* Issue where `GhostAuthoringComponent` was disallowed in nested prefab setups (where the root prefab is NOT a ghost).\n* Log verbiage when creating a driver in DefaultDriverConstructor read like a 'call to action'. It's not."
      },
      "upmCi": {
        "footprint": "9a0ca01acd8f36ba0b6d69406c2e0bc136e197b2"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.netcode@1.2/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/dots.git",
        "type": "git",
        "revision": "38c44b22a14cc4a35bc1b7a2f5ab1846208176d5"
      },
      "dist": {
        "shasum": "751c2bd9d708429b3b26d742a1bc794b96e52284",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-1.2.0-pre.4.tgz"
      },
      "name": "com.unity.netcode",
      "version": "1.2.0-pre.4",
      "description": "Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foundation for creating networked multiplayer applications within DOTS.",
      "displayName": "Netcode for Entities",
      "type": "assets",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.transport": "2.1.0",
        "com.unity.entities": "1.2.0-pre.4",
        "com.unity.modules.animation": "1.0.0"
      }
    },
    "1.2.0-exp.3": {
      "unity": "2022.3",
      "unityRelease": "11f1",
      "_upm": {
        "changelog": "### Added\n\n* `GhostInputSystemGroup` and `GhostSimulationSystemGroup` are now included in the LocalSimulation world, which means your Input polling systems will now automatically get added to the LocalWorld. This helps facilitate support for singleplayer testing workflows. LocalWorld performance is unaffected (as it's a negligible overhead to tick these empty `SystemGroup`s).\n* support for GameObject rendering for debug bounding boxes. Entities Graphics was already supported, this adds support for GameObjects rendering. See Playmode Tools in docs for more details.\n* `ConvertToGhostPrefab` will now set the `EntityName` to the configured GhostName (if null). Useful for dynamically created Entity prefabs.\n* components, buffers and commands that implement generic interfaces that inherit from the IComponentData and IBufferElementData (i.e IComponentData) are now detected correctly and serialization code generated.\n\n### Changed\n\n* mostly for maintenance, code-generation for the component and buffer serialiser, using helper methods living all inside the package. No user visible changes\n* Updated Transport dependency to version 2.1.0.\n* The minimum supported editor version is now 2022.3.11f1\n* all Simulate component enable states are reset to using a job instead of doing that synchronously on the main thread. Reason for the change is the fact this was inducing a big stall at the end of the Prediction loop. However, the benefits is only visible when there are a large number of jobified workload.\n* components, command, buffers and rpc are now replicated also if they are private or internal\n\n### Removed\n\n* dependency from com.unity.logging. Before, in order to use Netcode for Entities, the logging package was required. Now it is optional.\n\n### Fixed\n\n* We now correctly throw a `PlatformNotSupportedException` in the three locations we previously threw `NotImplementedException`s in `ClientServerBootStrap` (methods; `CreateServerWorld`, `CreateClientWorld`, and `CreateThinClientWorld`).\n* when the server change owner for a ghost configured as owner-predicted, the ghost automatically switch the operation mode from interpolated to predicted (or vice versa) based on the owner.\n* an issue with \"partial component\" send optimisation (component present only on interpolated or predicted ghost, or based on the owner) that was causing data being deserialised incorrectly.\n* an issue with enable-bits serialisation not respecting the SendToOwner property set in the GhostComponentAttribute, cluttering the state always with the latest server data, regardless of the setting.\n* an issue with code-gen when using combination of flags for the GhostComponent.PrefabType property.\n* `Error: Invalid context argument index` errors when using the Timeout feature of the PlayMode Tools.\n* Updated log message for overriding variants rule\n* `IndexOutOfRangeException` in the `GhostCollectionSystem` when ghost hash mismatches are present (a common error during dev).\n* An issue accessing the m_PredictionSwitchingSmoothingLookup buffer when multiple ghosts change their owner and they need to switch prediction mode.\n* GhostPrefabCreation.ConvertToGhostPrefab api that incorrectly replicated and assign to child entity components the root entity variant."
      },
      "upmCi": {
        "footprint": "a16254d0b89718efee03c81626c172b5e34fbb2a"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.netcode@1.2/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/dots.git",
        "type": "git",
        "revision": "9bfd95fb576e8fa710c8544b6706bdd73e25afef"
      },
      "dist": {
        "shasum": "b810ecadd34f77eb142ead8983a66fa75f10e306",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-1.2.0-exp.3.tgz"
      },
      "name": "com.unity.netcode",
      "version": "1.2.0-exp.3",
      "description": "Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foundation for creating networked multiplayer applications within DOTS.",
      "displayName": "Netcode for Entities",
      "type": "assets",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.transport": "2.1.0",
        "com.unity.entities": "1.2.0-exp.3",
        "com.unity.modules.animation": "1.0.0"
      }
    },
    "1.1.0-pre.3": {
      "unity": "2022.3",
      "unityRelease": "0f1",
      "_upm": {
        "changelog": "### Changed\n\n* the DefaultTranslationSmoothingAction.DefaultStaticUserParams is now public and can be used by user code (to either change the defaults or use them in their own custom smoothing methods).\n\n### Fixed\n\n* issue when using prediction error smoothing, causing wrong component data retrieved from the backup buffer and consequently not making the smoothing function work as expected.\n* an issue in the reported elapsed time when executing the PredictedFixedStepSystemGroup in presence of partial ticks and PredictedFixedStepSimulationTickRatio grater than 1, causing problem with physics and character controller interpolation.\n* An issue with the change mask not read correctly when serializing/deserializing components with more than 32 fields.\n* `InvalidOperationException: Comparison function is incorrect` inside `GhostComponentSerializerCollectionSystemGroup` due to `ComponentTypeSerializationStrategy.DefaultType` being a `byte` flag enum (so it erroneously matched `128 - 0` the same as `0 - 128` due to wrapping)."
      },
      "upmCi": {
        "footprint": "87dd944372c7e5179109b8bfb0401b6c09dc3a9e"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.netcode@1.1/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/dots.git",
        "type": "git",
        "revision": "5edeb315aa3ca0d26060290a69660b2afdabe2ff"
      },
      "dist": {
        "shasum": "be47e4b5d420f45d11ac755132521c08a12275eb",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-1.1.0-pre.3.tgz"
      },
      "name": "com.unity.netcode",
      "version": "1.1.0-pre.3",
      "description": "Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foundation for creating networked multiplayer applications within DOTS.",
      "displayName": "Netcode for Entities",
      "type": "assets",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.transport": "2.0.1",
        "com.unity.entities": "1.1.0-pre.3",
        "com.unity.logging": "1.1.0-pre.3",
        "com.unity.modules.animation": "1.0.0"
      }
    },
    "1.1.0-exp.1": {
      "unity": "2022.3",
      "unityRelease": "0f1",
      "_upm": {
        "changelog": "### Added\n\n* source generator can now be configure to enable/disable logs, report timings. It also possible to set the minimal log level (by default is now Error).\n* new public template specs and generator documentation\n* Added convenience methods for getting the clientworld / serverworld (or thin client list) added to ClientServerBootstrap\n* Additional analytics events. Multiplayer tools fields, prediction switching counters, tick rate configuration.\n* New method on the `PredictedFixedStepSimulationSystemGroup` class to initialise the rate as a multiple of a base tick rate.\n* `Packet Fuzz %` is now configurable via the Network Simulator. It's a security tool that should not be enabled during normal testing. It's purpose is to test against malicious MitM attacks, which aim to take down your server via triggering exceptions during packet deserialization. Thus, all deserialization code should be written with safeguards and tolerances, ensuring your logic will fail gracefully.\n* CopyInputToCommandBufferSystemGroup group, that contains all the system that copy IInputCommandData to the underlying ICommand buffer. This let you now target this group with the guarantee that all inputs are not copied after it run.\n* CopyCommandBufferToInputSystemGroup group, that contains all the system that copy ICommandData to their IInputCommandData representation. It runs first in the prediction loop and you can easily target it to do logic before or after the input are updated.\n* GhostSpawnClassificationSystemGroup, that is aimed to contains all your classification systems in one place.\n* Error messages to some missing `NetworkDriver.Begin/EndSend` locations.\n* defining `ENABLE_UNITY_RPC_REGISTRATION_LOGGING` will now log information about registered RPCs during netcode startup\n* We now automatically detect `Application.runInBackground` being set to false during multiplayer gameplay (a common error), and give advice via a suppressible error log as to why it should be enabled.\n* We introduced the new InputBufferData<T> buffer, that is used as underlying container for all IInputComponentData.\n* conditional compilation for some public interfaces in DefaultDriverBuilder to exclude the use of RegisterServer methods for WebGL build (they can't listen). It is possible to do everything manually, but the helper methods are not present anymore.\n* new method for creating a NetworkDriver using WebSocketNetworkInterface.\n* Added two new values to the `NetworkStreamDisconnectReason` enum: `AuthenticationFailure` and `ProtocolError`. The former is returned when the transport is configured to use DTLS or TLS and it fails to establish a secure session. The latter is returned for low-level unexpected transport errors (e.g. malformed packets in a TCP stream).\n\n### Changed\n\n* relaxed public field condition for variants. When declaring a ghost component variations, the variant fields are not required to be public. This make the type pretty much unusable for any other purpose but declaring the type serialisation.\n* Increased the ThinClient cap on `MultiplayerPlayModePreferences.MaxNumThinClients` from 32 to 1k, to facilitate some amount of in-editor testing of high-player-counts.\n* NetcodeTestWorld updates the worlds in the same way the package does: first server, then all clients worlds.\n* When Dedicated Server package is installed, the PlayMode Type value is overridden by the active Multiplayer Role.\n\n### Deprecated\n\n* The public `PredictedFixedStepSimulationGroup.TimeStep`. You should always use the `PredictedFixedStepSimulationGroup.ConfigureTimeStep` to setup the rate of the `PredictedFixedStepSimulationSystemGroup.`.\n* the IInputBufferData interface (internal for code-gen use but public) has been deprecated and will be removed in the 1.2 release.\n\n### Fixed\n\n* incorrect code generated serialization and calculated ChangeMask bits for component and buffers when the GhostFieldAttribute.Composite flag is set to true (in some cases).\n* wrong check for typename in GhostComponentVariation\n* missing region in unquantized float template, causing errors when used for interpolated field.\n* improper check when the ClientServerSetting asset is saved, causing worker process not seeing the changes in the settings.\n* The server world was not setting the correct rate to the group, if that was not done as part of the bootstrap.\n* Exception thrown when the NetDbg tools is connecting to either the editor or player.\n* Renamed (and marginally improved) the \"Multiplayer PlayMode Tools\" Window to the \"PlayMode Tools\" Window, to disambiguate it from \"[MPPM] Multiplayer Play Mode\" (an Engine feature).\n* Attempting to access internals of Netcode for Entities (e.g. via Assembly Definition References) would cause compiler errors due to `MonoPInvokeCallbackAttribute` being ambiguous between AOT and Unity.Entities.\n* Packet dump logging exception when using relevancy, despawns, and packet dumps enabled. Also fixed performance overhead (as it was erroneously logging stack traces).\n* An issue with variant hash calculation in release build, causing ghost prefab hash being different in between development/editor and release build.\n* GhostUpdateSystem.RestoreFromBackup does not always invalidate/bump the chunk version for a component, but only if the chunk as changed since the last time the restore occurred.\n* Issue in TryGetHashElseZero, that was using the ComponentType.GetDebugName to calculate the variant hash, leading incorrect results in a release player build\n* A `NetworkDriver.BeginSend` error causing an infinite loop in the `RpcSystem`.\n* Deprecated Analytics API when using 2023.2 or newer.\n* compilation issue when using 2023.2, caused by an ambiguous symbol (define in both Editor and in Entities.Editor assembly)\n* Errant netcode systems no longer show up in the DefaultWorld: `PhysicsWorldHistory`, `SwitchPredictionSmoothingPhysicsOrderingSystem`, `SwitchPredictionSmoothingSystem`, `GhostPresentationGameObjectTransformSystem`, `GhostPresentationGameObjectSystem`, and `SetLocalPlayerGraphicsColorsSystem`.\n* Previous was hard to retrieve the generated buffer for a given IInputComponentData. Now is easy as doing something like InputBufferData<MyInputComponent>.\n* Compilation error when building for WebGL\n* SnapshotDataLookupCache not created in the correct order, causing custom classification system using the SnapshotBufferHelper to throw exceptions, because the cache was not initialised.\n* A replicated `[GhostEnabledBit]` flag component would throw an `ArgumentException` when added to a Prespawned Ghost due to `ArchetypeChunk.GetDynamicComponentDataArrayReinterpret`."
      },
      "upmCi": {
        "footprint": "142b6d5f84e0d29136fe7e018a8ed953c8e74762"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.netcode@1.1/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/dots.git",
        "type": "git",
        "revision": "c3274ed2015eeec85914d62bfbd32e39f0dd112b"
      },
      "dist": {
        "shasum": "4e47ea3a38f18ed3c7eee5a7f8da5c769d4b4630",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-1.1.0-exp.1.tgz"
      },
      "name": "com.unity.netcode",
      "version": "1.1.0-exp.1",
      "description": "Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foundation for creating networked multiplayer applications within DOTS.",
      "displayName": "Netcode for Entities",
      "type": "assets",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.transport": "2.0.1",
        "com.unity.entities": "1.1.0-exp.1",
        "com.unity.logging": "1.1.0-exp.1",
        "com.unity.modules.animation": "1.0.0"
      }
    },
    "1.0.17": {
      "unity": "2022.3",
      "unityRelease": "0f1",
      "_upm": {
        "changelog": "### Added\n\n* defining ENABLE_UNITY_RPC_REGISTRATION_LOGGING will now log information about registered RPCs during netcode startup\n\n### Changed\n\n* NetcodePacket debug log filenames changed to include date/time and version information\n\n### Fixed\n\n* addressed a case where it was possible for an exception to be thrown on the server if an RPC was queued for a then dropped connection.\n* \"AssetDatabase.RegisterCustomDependency are restricted during importing\" exception thrown by the NetCodeClientSettings, NetCodeClientServerSettings, NetCodeServerSettings in their OnDisable method, when using 2023.2 or newer."
      },
      "upmCi": {
        "footprint": "a56f2a21ac675cb9d7151fd20c66c7f7fabf1770"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.netcode@1.0/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/dots.git",
        "type": "git",
        "revision": "8f9a34fef643cca2b5f84470ac61c171c1831168"
      },
      "dist": {
        "shasum": "dcb476daaf3e0723146d51860a4d4b28f1305773",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-1.0.17.tgz"
      },
      "name": "com.unity.netcode",
      "version": "1.0.17",
      "description": "Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foundation for creating networked multiplayer applications within DOTS.",
      "displayName": "Netcode for Entities",
      "type": "assets",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.transport": "2.0.1",
        "com.unity.entities": "1.0.16",
        "com.unity.logging": "1.0.16",
        "com.unity.modules.animation": "1.0.0"
      }
    },
    "1.0.15": {
      "unity": "2022.3",
      "unityRelease": "0f1",
      "_upm": {
        "changelog": "### Changed\n\n* Updated com.unity.entities dependency to 1.0.14\n* Use of non required TempJob allocation and use Allocator.Temp instead.\n\n### Fixed\n\n* Runtime EntityQuery leaks and reduce runtime memory pressure due to continuously allocating queries without disposing.\n* Reduced memory usage in Editor tests, by avoiding allocating queries continuously in hot paths."
      },
      "upmCi": {
        "footprint": "e6289d65df199ced74648f8de51830472111eac8"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.netcode@1.0/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/dots.git",
        "type": "git",
        "revision": "13433ff314ae6503bb855899b83d26a063650441"
      },
      "dist": {
        "shasum": "f6de70ade4fc7a1a6d713ba309443e01f9c800ee",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-1.0.15.tgz"
      },
      "name": "com.unity.netcode",
      "version": "1.0.15",
      "description": "Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foundation for creating networked multiplayer applications within DOTS.",
      "displayName": "Netcode for Entities",
      "type": "assets",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.transport": "2.0.1",
        "com.unity.entities": "1.0.14",
        "com.unity.logging": "1.0.14",
        "com.unity.modules.animation": "1.0.0"
      }
    },
    "1.0.12": {
      "unity": "2022.2",
      "unityRelease": "15f1",
      "_upm": {
        "changelog": "### Changed\n* Updated com.unity.entities dependency to 1.0.11\n\n### Fixed\n* `MultiplayerPlayModeWindow > Dump Packet Logs` now works more reliably, now works with NUnit tests, and dump files are named with more context.\n* Fixed bug in `GhostSendSystem` that caused it to not replicate ghosts when enabling packet dumps. `GhostValuesAreSerialized_WithPacketDumpsEnabled` test added."
      },
      "upmCi": {
        "footprint": "cf5420ec6d17a2c7db7e73d934d24e9997619cc9"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.netcode@1.0/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/dots.git",
        "type": "git",
        "revision": "81c21934f16a49fc5f826187f07aaea4728d63c3"
      },
      "dist": {
        "shasum": "752b4615ecf554c602abac3ce519201ec1542403",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-1.0.12.tgz"
      },
      "name": "com.unity.netcode",
      "version": "1.0.12",
      "description": "Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foundation for creating networked multiplayer applications within DOTS.",
      "displayName": "Netcode for Entities",
      "type": "assets",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.transport": "2.0.1",
        "com.unity.entities": "1.0.11",
        "com.unity.logging": "1.0.11",
        "com.unity.modules.animation": "1.0.0"
      }
    },
    "1.0.11": {
      "unity": "2022.2",
      "unityRelease": "15f1",
      "_upm": {
        "changelog": "### Fixed\n\n* Updated logging dependency"
      },
      "upmCi": {
        "footprint": "5f122986cefc8b5207a730563066dae5586cfae0"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.netcode@1.0/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/dots.git",
        "type": "git",
        "revision": "7913fb5a6e4700c816c0910e23fbaad56b71fc6b"
      },
      "dist": {
        "shasum": "d8178090c65961eb908e695725ba5a7d386fbdc8",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-1.0.11.tgz"
      },
      "name": "com.unity.netcode",
      "version": "1.0.11",
      "description": "Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foundation for creating networked multiplayer applications within DOTS.",
      "displayName": "Netcode for Entities",
      "type": "assets",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.transport": "2.0.1",
        "com.unity.entities": "1.0.10",
        "com.unity.logging": "1.0.11",
        "com.unity.modules.animation": "1.0.0"
      }
    },
    "1.0.10": {
      "unity": "2022.2",
      "unityRelease": "15f1",
      "_upm": {
        "changelog": "### Added\n\n* What's New and Upgrade Guide section in the docs.\n* New NetworkRequestListenResult cleanup component, that can be used to track the result of a listen request.\n\n### Changed\n\n* documentation index page with up-to-date info and links.\n* Removed forcing local client/server to alway use the loopback address to connect.\n* It is now possible to listen to the NetworkEndPoint.Any also for IPC connection.\n* The NetworkStreamDriver.GetRemoteAddress always return a consistent address for the connection when the NetworkDriver is configured to use the Unity Relay. Before, an invalid address was returned after the connection has been established, that was incorrect.\n* Exposed all the internal state of the NetworkTimeSystem as public API\n\n### Fixed\n\n* exceptions when NetworkRequestListen and/or. NetworkRequestConnect are handled and proper handling of multiple (erroneous) requests presents.\n* A problem with InterpolatedTick, going back and not recovering correctly in presence of large application, either the server or the client, stalls (i.e after loading)."
      },
      "upmCi": {
        "footprint": "01c68054b283a8d97e7a446804d29d9a29e8ec72"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.netcode@1.0/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/dots.git",
        "type": "git",
        "revision": "464acdc5351df3c5deeb425d7aa31f4c7b20c0cf"
      },
      "dist": {
        "shasum": "bfa9f1721444309f7fc963a7e39ade488c0f95b2",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-1.0.10.tgz"
      },
      "name": "com.unity.netcode",
      "version": "1.0.10",
      "description": "Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foundation for creating networked multiplayer applications within DOTS.",
      "displayName": "Netcode for Entities",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.transport": "2.0.1",
        "com.unity.entities": "1.0.10",
        "com.unity.logging": "1.0.10",
        "com.unity.modules.animation": "1.0.0"
      }
    },
    "1.0.8": {
      "unity": "2022.2",
      "unityRelease": "15f1",
      "_upm": {
        "changelog": "### Changed\n\n* Reduced the amount of memory allocated by allocating based on the maximum number of worker threads the running platform requires rather than defaulting to using a theoretical upper-bound of 128 worker threads.\n* Removed the additional entity created for each predicted ghost prefab, that was necessary to support predicted spawning. This has the addition benefit to cut almost in half (in case all ghost prefabs support all modes) the number of required archetypes.\n\n\n### Fixed\n\n* An issue with pre-spawned ghost not working correctly because sub-scene hash is calculated differently for client and server\n* an issue when sub-scene are opened for live-conversion and baking, causing spawned ghosts to contains invalid blob asset references (i.e colliders), introducing potential crashes and other problems (i.e missing collision and mis-prediction)\n* An issue with baking, not using the correct NetCodeClientTarget (either client or client/server) when baking a sub-scene for a client standalone build.\n* An issue with the Entities/Build project settings UI that was not updating the ClientTarget to use is the ProjectSettings window was not closed, or another settings \"tab\" was selected.\n* An issue with HasServerWorld reporting the presence of a server world even though no server was created.if it's not needed.\n* A sporadic InvalidOperationException: GetSingleton<Unity.NetCode.LowLevel.SnapshotDataLookupCache>() thrown when retrieving the Unity.NetCode.LowLevel.SnapshotDataLookupCache.\n* GhostCollectionSystem InvalidOperationException thrown when Ghost prefab validation fails, trying accessing invalidated DynamicBuffer.\n* An issue in the GhostChunkSerializer, that was overwriting the snapshot data with some enable bits masks.\n* An issue in the GhostUpdateSystem, that was reading and applying the wrong enable bits.\n* An issue when restoring enable bits state from the predicted ghost history buffer.\n* Fixed a \"System Creation Order\" bug causing components with `[GhostField]` fields (or the `[GhostEnableBit]` attribute) to silently default to the `DontSerializeVariant`, especially in cases where Ghost Prefabs are created at runtime (via `GhostPrefabCreation.ConvertToGhostPrefab`).\n  * \"Ghost Registration\" and \"Default Variant Registration\" Systems now use `[CreateBefore(typeof(DefaultVariantSystemGroup))]`, so that user-code can add `[CreateAfter(typeof(DefaultVariantSystemGroup))]` when accessing `GhostComponentSerializerCollectionData` data.\n  * We now also guard all of these calls, giving explicit (fatal) errors if used improperly.\n* An issue in `GhostDistancePartitioningSystem`, which caused Netcode to add a shared component ECB entry for every single ghost containing a `LocalTransform`, every single frame, when `GhostDistanceImportance` was enabled in a users project.\n\n\n### Deprecated\n\n* Now that the `GhostAuthoringInspectionComponent` shows all replicated components, you shouldn't have to opt-into prefab overrides. Thus, deprecated the `SupportsPrefabOverrides` attribute."
      },
      "upmCi": {
        "footprint": "906dee69c427dfbb2a9fd4c564a6a8207a25dcb0"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.netcode@1.0/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/dots.git",
        "type": "git",
        "revision": "25dfb648cd0fabcf13fed46219e5fbe0fdabe4ac"
      },
      "dist": {
        "shasum": "395b2610c41e036bf7bb7e61dca3ec20358c0d77",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-1.0.8.tgz"
      },
      "name": "com.unity.netcode",
      "version": "1.0.8",
      "description": "Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foundation for creating networked multiplayer applications within DOTS.",
      "displayName": "Netcode for Entities",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.transport": "2.0.1",
        "com.unity.entities": "1.0.8",
        "com.unity.logging": "1.0.8",
        "com.unity.modules.animation": "1.0.0"
      }
    },
    "1.0.0-pre.65": {
      "unity": "2022.2",
      "unityRelease": "2f1",
      "_upm": {
        "changelog": "### Added\n\n* validate and sanitise connect and listen addresses when using IPCNetworkInterface. That was causing some nasty crash in the Transport without users understanding the actual problem.\n\n### Changed\n\n* the following components has been renamed: | Original Name | New Name        | | ---------------| ---------------| |NetworkSnapshotAckComponent| NetworkSnapshotAck | |IncomingSnapshotDataStreamBufferComponent| IncomingSnapshotDataStreamBuffer | |IncomingRpcDataStreamBufferComponent| IncomingRpcDataStreamBuffer | |OutgoingRpcDataStreamBufferComponent| OutgoingRpcDataStreamBuffer  | |IncomingCommandDataStreamBufferComponent| IncomingCommandDataStreamBuffer | |OutgoingCommandDataStreamBufferComponent|OutgoingCommandDataStreamBuffer| |NetworkIdComponent|NetworkId| |CommandTargetComponent|CommandTarget| |GhostComponent|GhostInstance| |GhostChildEntityComponent|GhostChildEntity| |GhostOwnerComponent|GhostOwner| |PredictedGhostComponent|PredictedGhost| |GhostTypeComponent|GhostType| |SharedGhostTypeComponent|GhostTypePartition| |GhostCleanupComponent|GhostCleanup| |GhostPrefabMetaDataComponent|GhostPrefabMetaData| |PredictedGhostSpawnRequestComponent|PredictedGhostSpawnRequest| |PendingSpawnPlaceholderComponent|PendingSpawnPlaceholder| |ReceiveRpcCommandRequestComponent|ReceiveRpcCommandRequest| |SendRpcCommandRequestComponent|SendRpcCommandRequest| |MetricsMonitorComponent|MetricsMonitor|\n\n### Removed\n\n* internal ListenAsync/ConnectAsync methods (no visible API changes for the users)\n\n### Fixed\n\n* a very unfrequent exception thrown in presence of a ghost with a replicated component that does not present any prediction errors names (i.e an Entity reference).\n* source generator crash when logging missing assembly dependency.\n* source generator requiring Unity.Transport package dependency for generating serialization code.\n* Snapshot history buffer not restore correctly, causing entities component to be stomped with random data.\n* Fixed an issue when ClientServerBootstrap.AutoConnectPort is 0 indicating autoconnecting should be disabled and you will connect manually via the driver connect API, but the playmode tools ip/port fields would still triggering (so you get two connections set up and errors). We also now prevent attempts to make a connection while one is already established.\n* an issue with source generator, validating incorrectly custom templates that uses overrides.\n* removed warning for old temp allocation when converting sub-scene with pre-spawned ghosts.\n* Forced all `ICommandData`'s `InternalBufferCapacity` to be zero, because we were constantly wasting hundreds of bytes per entity to store data that we know for certain will not fit into the internal capacity (as the dynamic buffer required length is hardcoded to 64, for netcode input buffers).\n* Fixed potential crash in players when send queue is full\n* Fixed exceptions when trying to use invalid interpolation ticks (could happen during snapshot updates or in predicted spawning system on disconnection)"
      },
      "upmCi": {
        "footprint": "2db64c497755f69af8f6c9cd2365a8e6c67f4cb0"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.netcode@1.0/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/dots.git",
        "type": "git",
        "revision": "85530c484ef7afedc5b128081152ec5e1f6f30e2"
      },
      "dist": {
        "shasum": "2d3df90baa848dd012bd969699d4342fbc2fd8ea",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-1.0.0-pre.65.tgz"
      },
      "name": "com.unity.netcode",
      "version": "1.0.0-pre.65",
      "description": "Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foundation for creating networked multiplayer applications within DOTS.",
      "displayName": "Netcode for Entities",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.transport": "2.0.0-pre.6",
        "com.unity.entities": "1.0.0-pre.65",
        "com.unity.logging": "1.0.0-pre.37",
        "com.unity.modules.animation": "1.0.0"
      }
    },
    "1.0.0-pre.47": {
      "unity": "2022.2",
      "unityRelease": "2f1",
      "_upm": {
        "changelog": "### Fixed\n\n* Snapshot history buffer not restore correctly, causing entities component to be stomped with random data."
      },
      "upmCi": {
        "footprint": "16e299560c2d5c37fd60a28c7213f86861f199a2"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.netcode@1.0/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/dots.git",
        "type": "git",
        "revision": "36551e18e8f4a1b29a42b997554369e56ce8875a"
      },
      "dist": {
        "shasum": "ce8e1f1bfcefa84eb72dcccc799929403d3c0c66",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-1.0.0-pre.47.tgz"
      },
      "name": "com.unity.netcode",
      "version": "1.0.0-pre.47",
      "description": "Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foundation for creating networked multiplayer applications within DOTS.",
      "displayName": "Netcode for Entities",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.transport": "2.0.0-pre.6",
        "com.unity.entities": "1.0.0-pre.47",
        "com.unity.logging": "1.0.0-pre.21",
        "com.unity.modules.animation": "1.0.0"
      }
    },
    "1.0.0-pre.44": {
      "unity": "2022.2",
      "unityRelease": "2f1",
      "_upm": {
        "changelog": "### Added\n\n* Validation checks to the `GhostDistanceData` `TileSize` to prevent invalid tile assignment or DivideByZeroException.\n* Added a HelpURL (linking to docs) for `DisableAutomaticPrespawnSectionReportingAuthoring`, `GhostAuthoringComponent`, `GhostAuthoringInspectionComponent`, `DefaultSmoothingActionUserParamsAuthoring`, `GhostPresentationGameObjectAuthoring`, `NetCodeDebugConfigAuthoring`, `GhostAnimationController`, `GhostPresentationGameObjectEntityOwner`, and `NetCodePhysicsConfig`.\n* New GetLocalEndPoint API to NetworkStreamDriver\n\n### Changed\n\n* Make EnablePacketLogging component public to allow for per connection debug information.\n* Updated `com.unity.transport` dependency to version 2.0.0-pre.6.\n\n### Fixed\n\n* An issue with the `NetworkEmulator` in the editor when enabling domain reload (while switching play-mode) that was causing the game to forcibly immediately exit the the play state.\n* An issue with pre-spawned ghost baking when the baked entity has not LocalTransform (position/rotation for transform v1) component.\n* \"Ghost Distance Importance Scaling\" is now working again. Ensure you read the updated documentation.\n* Missing field write in `NetworkStreamListenSystem.OnCreate`, fixing Relay servers.\n* Code-Generated Burst-compiled Serializer methods will now only compile inside worlds with `WorldFlag.GameClient` and `WorldFlag.GameServer` WorldFlags. This improves exit play-mode speeds (when Domain Reload is enabled), baking (in all cases), and recompilation speeds.\n* Fixed an issue where multiple ghost types with the same archetype but difference data could sometime trigger errors about ghosts changing type.\n* Fix a mistake where the relay sample will create a client driver rather than a server driver\n* Fix logic for relay set up on the client. Making sure when calling DefaultDriverConstructor.RegisterClientDriver with relay settings that we skip this unless, requested playtype is client or clientandserver (if no server is found), the simulator is enabled, or on a client only build.\n* Fixed `ArgumentException: ArchetypeChunk.GetDynamicComponentDataArrayReinterpret<System.Byte> cannot be called on zero-sized IComponentData` in `GhostPredictionHistorySystem.PredictionBackupJob`. Added comprehensive test coverage for the `GhostPredictionHistorySystem` (via adding a predicted ghost version of the `GhostSerializationTestsForEnableableBits` tests).\n* Fixed serialization of components on child entities in the case where `SentForChildEntities = true`. This fix may introduce a small performance regression in baking and netcode world initialization. Contact us with all performance related issues.\n* `GhostUpdateSystem` now supports Change Filtering, so components on the client will now only be marked as changed _when they actually are changed_. We strongly recommend implementing change filtering when reading components containing `[GhostField]`s and `[GhostEnabledBit]`s on the client.\n* Fixed input component codegen issue when the type is nested in a parent class\n* Exposed NetworkTick value to Entity Inspector"
      },
      "upmCi": {
        "footprint": "77cc2b4a0e71647fc7665922048577949a3878c2"
      },
      "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.netcode@1.0/manual/index.html",
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/dots.git",
        "type": "git",
        "revision": "0e572178431e16c09c6c434c873bf0c60e52a5e9"
      },
      "dist": {
        "shasum": "4c9a919bc578817320e760c80da3b8190296c32e",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-1.0.0-pre.44.tgz"
      },
      "name": "com.unity.netcode",
      "version": "1.0.0-pre.44",
      "description": "Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foundation for creating networked multiplayer applications within DOTS.",
      "displayName": "Netcode for Entities",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.transport": "2.0.0-pre.6",
        "com.unity.entities": "1.0.0-pre.44",
        "com.unity.logging": "1.0.0-pre.21",
        "com.unity.modules.animation": "1.0.0"
      }
    },
    "1.0.0-pre.15": {
      "unity": "2022.2",
      "unityRelease": "0f1",
      "upmCi": {
        "footprint": "6949a45917c3cdc0f14c0a56025b2a032c793bb5"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/dots.git",
        "type": "git",
        "revision": "82387d7cb4bc4aee07e94656ef8103860ef6ec55"
      },
      "dist": {
        "shasum": "12c61f8f11a1f3f8ab1afc3b40cc0a335f74677a",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-1.0.0-pre.15.tgz"
      },
      "name": "com.unity.netcode",
      "version": "1.0.0-pre.15",
      "description": "Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foundation for creating networked multiplayer applications within DOTS.",
      "displayName": "Netcode for Entities",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.transport": "2.0.0-pre.2",
        "com.unity.entities": "1.0.0-pre.15",
        "com.unity.logging": "1.0.0-pre.11",
        "com.unity.modules.animation": "1.0.0"
      }
    },
    "1.0.0-exp.13": {
      "unity": "2022.2",
      "unityRelease": "0b5",
      "upmCi": {
        "footprint": "13592f569f5c2ba8c63aa6a77a3e13fd9942f6bf"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/dots.git",
        "type": "git",
        "revision": "bde89ab29c5e7b9e2491079103f23ad23d8dc81f"
      },
      "dist": {
        "shasum": "68a0d98c56567cd92ef0ed70c4ba039d1bbed16a",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-1.0.0-exp.13.tgz"
      },
      "name": "com.unity.netcode",
      "version": "1.0.0-exp.13",
      "description": "Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foundation for creating networked multiplayer applications within DOTS.",
      "displayName": "Netcode for Entities",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.transport": "2.0.0-exp.6",
        "com.unity.entities": "1.0.0-exp.12",
        "com.unity.logging": "1.0.0-exp.7"
      }
    },
    "1.0.0-exp.8": {
      "unity": "2022.2",
      "unityRelease": "0b5",
      "upmCi": {
        "footprint": "c46eeca94df456f0416ead636fda178b4f95760b"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/dots.git",
        "type": "git",
        "revision": "7f4180a58b7e1c75f6375bd73fb80bd99d195d4e"
      },
      "dist": {
        "shasum": "1d6628ec2626b38a24c8e7756860d10131102df8",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-1.0.0-exp.8.tgz"
      },
      "name": "com.unity.netcode",
      "version": "1.0.0-exp.8",
      "description": "Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foundation for creating networked multiplayer applications within DOTS.",
      "displayName": "Netcode for Entities",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.transport": "2.0.0-exp.6",
        "com.unity.entities": "1.0.0-exp.8",
        "com.unity.logging": "1.0.0-exp.6"
      }
    },
    "0.51.1-preview.21": {
      "unity": "2020.3",
      "unityRelease": "30f1",
      "upm": {
        "changelog": "### Changed\n\n* Package Dependencies\n    * `com.unity.entities` to version `0.51.1`"
      },
      "upmCi": {
        "footprint": "4560f3164b740722da7230491329b59e4fdc473d"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/dots.git",
        "type": "git",
        "revision": "063a98897b40805f53b859bb426ce664229d0c00"
      },
      "dist": {
        "shasum": "9dbb38adf200a33c162c5b07a6270025cbe0bccd",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-0.51.1-preview.21.tgz"
      },
      "name": "com.unity.netcode",
      "version": "0.51.1-preview.21",
      "description": "Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foundation for creating networked multiplayer applications within DOTS.",
      "displayName": "Netcode for Entities",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.transport": "1.0.0",
        "com.unity.entities": "0.51.1-preview.21"
      }
    },
    "0.51.0-preview.32": {
      "unity": "2020.3",
      "unityRelease": "0f1",
      "upm": {
        "changelog": "### Changed\n\n* Package Dependencies\n    * `com.unity.entities` to version `0.51.0`\n* Updated transport dependency to 1.0.0."
      },
      "upmCi": {
        "footprint": "165c77c2407541000019d5a6a04db076d1ceae17"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/dots.git",
        "type": "git",
        "revision": "469d2b30300a7ff2c2b15f72ee8613e374c37b63"
      },
      "_id": "com.unity.netcode@0.51.0-preview.32",
      "_integrity": "sha512-aLBWepO3z66uH6Dc6zAgqQyy28FtcibZN1WXzwUNY/bJQQ2ncztVLR7zld6ZIFna8ViWJxUy7R+I0hQ0TkN7aA==",
      "_resolved": "/tmp/com.unity.netcode@0.51.0-preview.32-opdqc1qa.tgz",
      "_from": "file:/tmp/com.unity.netcode@0.51.0-preview.32-opdqc1qa.tgz",
      "dist": {
        "shasum": "3441f3b6b4aa2aac55ae7343fb11a37606c5c939",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-0.51.0-preview.32.tgz"
      },
      "name": "com.unity.netcode",
      "version": "0.51.0-preview.32",
      "description": "Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foundation for creating networked multiplayer applications within DOTS.",
      "displayName": "Netcode for Entities",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.transport": "1.0.0",
        "com.unity.entities": "0.51.0-preview.32"
      }
    },
    "0.50.1-preview.19": {
      "unity": "2020.3",
      "unityRelease": "0f1",
      "upm": {
        "changelog": "### Added\n\n* Hybrid assemblies will not be included in DOTS Runtime builds.\n\n### Changed\n\n* Changed: Tick systems (Initialization, Simulation, Presentation) are not created as part of the default client-server bootstrap for Hybrid and the Client and Server worlds are updated by the PlayerLoop instead.\n\n### Fixed\n\n* Fixed an exception in `PhysicsWorldHistory` when enabling lag compensation.\n* Fixed a rare compile error when source generators found invalid data in the package cache.\n* Fixed issue that prevent systems been shown in System Hierarchy window.\n* Fixed an issue where RPCs could be lost in rare cases when sending too many of them.\n* Fix an incorrect overflow exception when pre-spawned or predicted spawned ghost serialize a subset of the fields."
      },
      "upmCi": {
        "footprint": "ebb579f0e70cd21376c67031ff6ad11a2e7c7d65"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/dots.git",
        "type": "git",
        "revision": "f510d2cf044b48696ac6e43c591f2fb031f46fca"
      },
      "_id": "com.unity.netcode@0.50.1-preview.19",
      "_integrity": "sha512-e/IXLFMb42Ent0sUsl7bvdn0761QzKnz5nDNTVe1/uUM2qYUlGtpJ/04gZ+0jBb3fNjM3O5b+KIGAWuJOxOdSw==",
      "_resolved": "/tmp/com.unity.netcode@0.50.1-preview.19-edwcrjjf.tgz",
      "_from": "file:/tmp/com.unity.netcode@0.50.1-preview.19-edwcrjjf.tgz",
      "dist": {
        "shasum": "26d2fc1184a248a1feef59b0704d4ff34b97b97c",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-0.50.1-preview.19.tgz"
      },
      "name": "com.unity.netcode",
      "version": "0.50.1-preview.19",
      "description": "Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foundation for creating networked multiplayer applications within DOTS.",
      "displayName": "Netcode for Entities",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.transport": "1.0.0-pre.15",
        "com.unity.entities": "0.50.1-preview.2"
      }
    },
    "0.50.0-preview.29": {
      "unity": "2020.3",
      "unityRelease": "0f1",
      "upmCi": {
        "footprint": "e7e68419b4fe0660d0879dc2e6e7f7eac0c38e62"
      },
      "repository": {
        "url": "https://github.cds.internal.unity3d.com/unity/dots.git",
        "type": "git",
        "revision": "8327688fcdee91448c8d4aa1ebbd5a4c1e665bef"
      },
      "_id": "com.unity.netcode@0.50.0-preview.29",
      "_integrity": "sha512-EVjC/nvF2M9Jc3Rt5dgh3emEtlyKXuMQwAklRNYmOjguBGh1aOTKnzvp8wAiUU8eNxASQAeEMG4Vt0/zaMjLcA==",
      "_resolved": "/tmp/com.unity.netcode@0.50.0-preview.29-06jv3swe.tgz",
      "_from": "file:/tmp/com.unity.netcode@0.50.0-preview.29-06jv3swe.tgz",
      "dist": {
        "shasum": "fc873ce55f34aade73819a062d6dd1e8407d225e",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-0.50.0-preview.29.tgz"
      },
      "name": "com.unity.netcode",
      "version": "0.50.0-preview.29",
      "description": "Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foundation for creating networked multiplayer applications within DOTS.",
      "displayName": "Netcode for Entities",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.transport": "1.0.0-pre.15",
        "com.unity.entities": "0.50.0-preview.24"
      }
    },
    "0.6.0-preview.7": {
      "unity": "2020.1",
      "unityRelease": "9f1",
      "upmCi": {
        "footprint": "d706b3fd68c19ce04fc8e887f63d67c047671b70"
      },
      "repository": {
        "url": "git+https://github.com/Unity-Technologies/netcode.git",
        "type": "git",
        "revision": "f5463f493744a4b8b62680e2ed23a5687b8aabfd"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.netcode-0.6.0-preview.7.tgz",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/netcode/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/netcode#readme",
      "_id": "com.unity.netcode@0.6.0-preview.7",
      "dist": {
        "shasum": "9f26edbcff9fe211373eff0986285d1fca4e6216",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-0.6.0-preview.7.tgz"
      },
      "name": "com.unity.netcode",
      "version": "0.6.0-preview.7",
      "description": "Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foudation for creating networked multiplayer applications within DOTS.",
      "displayName": "Unity NetCode",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.ext.nunit": "1.0.6",
        "com.unity.transport": "0.6.0-preview.7",
        "com.unity.burst": "1.4.1",
        "com.unity.entities": "0.17.0-preview.41"
      }
    },
    "0.5.0-preview.5": {
      "unity": "2020.1",
      "unityRelease": "2f1",
      "upmCi": {
        "footprint": "72296c2cf30c65e98fb36c2126af342908b9b609"
      },
      "repository": {
        "url": "git+https://github.com/Unity-Technologies/netcode.git",
        "type": "git",
        "revision": "c552d8192df620055f641922198b0b4a247a808a"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.netcode-0.5.0-preview.5.tgz",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/netcode/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/netcode#readme",
      "_id": "com.unity.netcode@0.5.0-preview.5",
      "dist": {
        "shasum": "da315da084576e1fba1284f1e476051eaf92b196",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-0.5.0-preview.5.tgz"
      },
      "name": "com.unity.netcode",
      "version": "0.5.0-preview.5",
      "description": "Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foudation for creating networked multiplayer applications within DOTS.",
      "displayName": "Unity NetCode",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.transport": "0.5.0-preview.5",
        "com.unity.burst": "1.3.7",
        "com.unity.entities": "0.16.0-preview.21"
      }
    },
    "0.4.0-preview.1": {
      "unity": "2020.1",
      "unityRelease": "2f1",
      "upmCi": {
        "footprint": "e88c5c51c8bf50d564016a098e5fa187d09bfbcd"
      },
      "repository": {
        "url": "git+https://github.com/Unity-Technologies/netcode.git",
        "type": "git",
        "revision": "8d757f092a828f913aee73fda7a813ff58a7b8b9"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.netcode-0.4.0-preview.1.tgz",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/netcode/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/netcode#readme",
      "_id": "com.unity.netcode@0.4.0-preview.1",
      "dist": {
        "shasum": "205de08408dd7aaf3e0dbabe05fc409112033e3e",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-0.4.0-preview.1.tgz"
      },
      "name": "com.unity.netcode",
      "version": "0.4.0-preview.1",
      "description": "Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foudation for creating networked multiplayer applications within DOTS.",
      "displayName": "Unity NetCode",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.transport": "0.4.1-preview.1",
        "com.unity.burst": "1.3.0",
        "com.unity.collections": "0.12.0-preview.13",
        "com.unity.entities": "0.14.0-preview.18"
      }
    },
    "0.3.0-preview.3": {
      "unity": "2020.1",
      "unityRelease": "2f1",
      "upmCi": {
        "footprint": "b3cb6f3be3c88871ea37aa98beb175fe9b19aeba"
      },
      "repository": {
        "url": "git+https://github.com/Unity-Technologies/netcode.git",
        "type": "git",
        "revision": "0c7a798930d3efad8cf72fb01612efddba074783"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.netcode-0.3.0-preview.3.tgz",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/netcode/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/netcode#readme",
      "_id": "com.unity.netcode@0.3.0-preview.3",
      "dist": {
        "shasum": "0d41b472e8dc82b38c0d486639a2cd97bcdd2706",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-0.3.0-preview.3.tgz"
      },
      "name": "com.unity.netcode",
      "version": "0.3.0-preview.3",
      "description": "Unity's Data Oriented Technology Stack (DOTS) multiplayer netcode layer - a high level netcode system built on entities. This package provides a foudation for creating networked multiplayer applications within DOTS.",
      "displayName": "Unity NetCode",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.transport": "0.4.0-preview.3",
        "com.unity.burst": "1.3.0",
        "com.unity.collections": "0.12.0-preview.13",
        "com.unity.entities": "0.14.0-preview.18"
      }
    },
    "0.2.0-preview.5": {
      "unity": "2019.3",
      "unityRelease": "0b11",
      "upmCi": {
        "footprint": "ce38487c69d6d755173e714d668d877f0461a8e2"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/Unity-Technologies/netcode.git",
        "revision": "2fb0954cceae679b397cea825faf7fc34e258ced"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.netcode-0.2.0-preview.5.tgz",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/netcode/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/netcode#readme",
      "_id": "com.unity.netcode@0.2.0-preview.5",
      "dist": {
        "shasum": "094c41019de5a8b90c3bf455d1b407dac473dcc2",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-0.2.0-preview.5.tgz"
      },
      "name": "com.unity.netcode",
      "version": "0.2.0-preview.5",
      "description": "Unity multiplayer netcode layer - a high level netcode system built on entities",
      "displayName": "Unity NetCode",
      "type": "asset",
      "host": "editor",
      "category": "",
      "dependencies": {
        "com.unity.transport": "0.3.1-preview.4",
        "com.unity.burst": "1.3.0",
        "com.unity.collections": "0.9.0-preview.5",
        "com.unity.entities": "0.11.0-preview.7"
      }
    },
    "0.1.0-preview.6": {
      "unity": "2019.3",
      "unityRelease": "0b11",
      "repository": {
        "footprint": "a204937207b0580846b35f944c9dc8a730a79f87",
        "type": "git",
        "url": "git+https://github.com/Unity-Technologies/netcode.git",
        "revision": "e057ccf4fb0b19bbd5e6ea8615a121abcfc49fbb"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.netcode-0.1.0-preview.6.tgz",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/netcode/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/netcode#readme",
      "_id": "com.unity.netcode@0.1.0-preview.6",
      "dist": {
        "shasum": "b4d3368a5ef91663123cdcf0a4949b936bc9e0b9",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-0.1.0-preview.6.tgz"
      },
      "name": "com.unity.netcode",
      "version": "0.1.0-preview.6",
      "description": "Unity multiplayer netcode layer - a high level netcode system built on entities",
      "displayName": "Unity NetCode",
      "type": "asset",
      "host": "editor",
      "dependencies": {
        "com.unity.transport": "0.3.0-preview.6",
        "com.unity.entities": "0.6.0-preview.24"
      }
    },
    "0.0.4-preview.0": {
      "unity": "2019.3",
      "unityRelease": "0b11",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/Unity-Technologies/netcode.git",
        "revision": "2c437c67f30b8dd7b9a6848a979abded4b5ffd3b"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.netcode-0.0.4-preview.0.tgz",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/netcode/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/netcode#readme",
      "_id": "com.unity.netcode@0.0.4-preview.0",
      "dist": {
        "shasum": "420bace64503606baa445ea4e5ae0a491d8e6e96",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-0.0.4-preview.0.tgz"
      },
      "name": "com.unity.netcode",
      "version": "0.0.4-preview.0",
      "description": "Unity multiplayer netcode layer - a high level netcode system built on entities",
      "displayName": "Unity NetCode",
      "type": "asset",
      "host": "editor",
      "dependencies": {
        "com.unity.transport": "0.2.3-preview.0",
        "com.unity.entities": "0.3.0-preview.4"
      }
    },
    "0.0.3-preview.2": {
      "unity": "2019.3",
      "unityRelease": "0b11",
      "repository": {
        "type": "git",
        "url": "git+ssh://git@github.com/Unity-Technologies/netcode.git",
        "revision": "a66f6695feb879621aa4a464939ffb6d92d3be4e"
      },
      "_resolved": "",
      "_integrity": "",
      "_from": "file:com.unity.netcode-0.0.3-preview.2.tgz",
      "bugs": {
        "url": "https://github.com/Unity-Technologies/netcode/issues"
      },
      "homepage": "https://github.com/Unity-Technologies/netcode#readme",
      "_id": "com.unity.netcode@0.0.3-preview.2",
      "dist": {
        "shasum": "004986cc124982072d2db5aa59a4fa463c6f18c0",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-0.0.3-preview.2.tgz"
      },
      "name": "com.unity.netcode",
      "version": "0.0.3-preview.2",
      "description": "Unity multiplayer netcode layer - a high level netcode system built on entities",
      "displayName": "Unity NetCode",
      "type": "asset",
      "host": "editor",
      "dependencies": {
        "com.unity.transport": "0.2.2-preview.2",
        "com.unity.entities": "0.3.0-preview.4"
      }
    },
    "0.0.2-preview.1": {
      "repository": {
        "type": "git",
        "url": "git@github.com:Unity-Technologies/netcode.git",
        "revision": "dc6ff1b90bd08de36cbf05fc07d05cc47f6ba114"
      },
      "dist": {
        "shasum": "8306dde61bb164df3977da74bd9d2925cab8f56d",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-0.0.2-preview.1.tgz"
      },
      "scripts": {},
      "_id": "com.unity.netcode@0.0.2-preview.1",
      "unity": "2019.3",
      "unityRelease": "0b11",
      "name": "com.unity.netcode",
      "version": "0.0.2-preview.1",
      "description": "Unity multiplayer netcode layer - a high level netcode system built on entities",
      "displayName": "Unity NetCode",
      "type": "asset",
      "host": "editor",
      "dependencies": {
        "com.unity.transport": "0.2.1-preview.1",
        "com.unity.entities": "0.2.0-preview.18"
      }
    },
    "0.0.1-preview.6": {
      "repository": {
        "type": "git",
        "url": "git@github.com:Unity-Technologies/netcode.git",
        "revision": "2a580c3ed0739a86c9e66aea2eca8b80cb8f118a"
      },
      "dist": {
        "shasum": "7328eecdac56992f8d3cf81f38c7d19706d3d861",
        "tarball": "https://download.packages.unity.com/com.unity.netcode/-/com.unity.netcode-0.0.1-preview.6.tgz"
      },
      "scripts": {},
      "_id": "com.unity.netcode@0.0.1-preview.6",
      "unity": "2019.3",
      "unityRelease": "0b11",
      "name": "com.unity.netcode",
      "version": "0.0.1-preview.6",
      "description": "Unity multiplayer netcode layer - a high level netcode system built on entities",
      "displayName": "Unity NetCode",
      "type": "asset",
      "host": "editor",
      "dependencies": {
        "com.unity.transport": "0.2.0-preview.4",
        "com.unity.entities": "0.2.0-preview.18"
      }
    }
  },
  "etag": "\"00261c7f854e399f0c079cceca5674a5\"",
  "time": {
    "1.2.0-pre.6": "2023-12-15T14:21:24Z",
    "1.2.0-pre.4": "2023-12-04T14:48:58Z",
    "1.2.0-exp.3": "2023-11-14T17:42:42Z",
    "1.1.0-pre.3": "2023-11-08T19:28:31Z",
    "1.1.0-exp.1": "2023-09-20T14:42:15Z",
    "1.0.17": "2023-09-13T11:26:37Z",
    "1.0.15": "2023-08-10T08:45:02Z",
    "1.0.12": "2023-06-21T08:41:17Z",
    "1.0.11": "2023-06-05T15:37:23Z",
    "1.0.10": "2023-05-25T14:09:04Z",
    "1.0.8": "2023-05-11T16:08:56Z",
    "1.0.0-pre.65": "2023-03-22T17:32:17Z",
    "1.0.0-pre.47": "2023-03-01T11:20:34Z",
    "1.0.0-pre.44": "2023-02-16T16:52:43Z",
    "1.0.0-pre.15": "2022-11-23T17:30:42Z",
    "1.0.0-exp.13": "2022-10-26T16:31:15Z",
    "1.0.0-exp.8": "2022-09-27T16:35:00Z",
    "0.51.1-preview.21": "2022-08-02T15:11:01Z",
    "0.51.0-preview.32": "2022-06-15T17:53:52Z",
    "0.50.1-preview.19": "2022-04-26T12:16:43Z",
    "0.50.0-preview.29": "2022-03-16T10:13:13Z",
    "0.6.0-preview.7": "2021-01-22T16:59:30Z",
    "0.5.0-preview.5": "2020-10-29T22:44:32Z",
    "0.4.0-preview.1": "2020-09-17T00:51:22Z",
    "0.3.0-preview.3": "2020-08-21T13:14:07Z",
    "0.2.0-preview.5": "2020-06-05T08:22:06Z",
    "0.1.0-preview.6": "2020-02-24T15:10:37Z",
    "0.0.4-preview.0": "2019-12-12T12:31:44Z",
    "0.0.3-preview.2": "2019-12-05T11:00:55Z",
    "0.0.2-preview.1": "2019-11-28T11:03:50Z",
    "0.0.1-preview.6": "2019-11-26T20:03:43Z"
  }
}
